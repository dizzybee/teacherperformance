<?php
/**
 * @file
 * Tests for the TranscoderAbstractionFactoryZencoder class
 */

/**
 * Tests for TranscoderAbstractionFactoryZencoder
 *
 * Inherits from DrupalWebTestCase to provide a clean environment.
 */
class TranscoderAbstractionFactoryZencoderTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Video Zencoder tests',
      'description' => 'Tests for the TranscoderAbstractionFactoryZencoder class',
      'group' => 'Video',
    );
  }

  function setUp() {
    drupal_load('module', 'video');
    require_once dirname(__FILE__) . '/../includes/TranscoderFactory.inc';
    require_once dirname(__FILE__) . '/../transcoders/TranscoderAbstractionFactoryZencoder.inc';
    parent::setUp();
  }

  /**
   * Test of TranscoderAbstractionFactoryZencoder::checkS3Compatibility()
   */
  public function testCheckS3Compatibility() {
    $errors = TranscoderAbstractionFactoryZencoder::checkS3Compatibility();
    $count = count($errors);
    $this->assertEqual(3, $count, t('There should be three errors when Amazon S3 has not been enabled and set up.'));

    // Check if the test server has the amazons3 module, because it is
    // an optional dependency.
    $hasmodule = FALSE && module_enable(array('amazons3'));
    $errorcountbase = 3;
    if ($hasmodule) {
      $errorcountbase--;
      $errors = TranscoderAbstractionFactoryZencoder::checkS3Compatibility();
      $count = count($errors);
      $this->assertEqual($errorcountbase, $count, t('There should be two errors when Amazon S3 has not been set up.'));
    }

    variable_set('aws_key', 'somekey');
    variable_set('amazons3_bucket', 'somebucket');
    $errors = TranscoderAbstractionFactoryZencoder::checkS3Compatibility();
    $count = count($errors);
    $this->assertEqual($errorcountbase - 2, $count, t('There should be no errors when Amazon S3 has been set up.'));
  }
}
